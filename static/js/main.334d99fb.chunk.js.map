{"version":3,"sources":["components/Header.js","components/Formulario.js","components/Gasto.js","components/Listado.js","components/Presupuesto.js","helper.js","components/Restante.js","components/ControlPresupuesto.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","titulo","Formulario","nombreGasto","React","createRef","valorGasto","crearGasto","e","preventDefault","gasto","_this","current","value","agregarGasto","currentTarget","reset","onSubmit","this","className","ref","type","placeholder","Component","Gasto","_this$props$gasto","Listado","Object","keys","gastos","map","key","components_Gasto","Presupuesto","presupuesto","revisarPresupuesto","restante","Restante","ControlPresupuesto","Fragment","components_Presupuesto","components_Restante","App","state","objectSpread","concat","Date","now","setState","calcularRestante","obtenerPresupuesto","prompt","totalPresupuesto","parseInt","validarPresupuesto","cantidad","Number","components_Header","components_Formulario","components_Listado","components_ControlPresupuesto","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.334d99fb.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) => {\n    return(\n        <header>\n            <h1>{ props.titulo }</h1>\n        </header>\n    );\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Formulario extends Component {\n\n    nombreGasto = React.createRef();\n    valorGasto  = React.createRef();\n\n    crearGasto = (e) => {\n        e.preventDefault();\n\n        const gasto = {\n            nombreGasto : this.nombreGasto.current.value,\n            valorGasto : this.valorGasto.current.value\n        }\n\n        this.props.agregarGasto(gasto);\n\n        e.currentTarget.reset();\n    }\n\n    render(){\n        return(\n            <form onSubmit= { this.crearGasto }>\n                <h2>Agrega tu gasto aquí</h2>\n                <div className=\"campo\">\n                    <label>Nombre: </label>\n                    <input ref={ this.nombreGasto } className=\"u-full-width\" type=\"text\" placeholder=\"Ej. Transporte\" />\n                </div>\n\n                <div className=\"campo\">\n                    <label>Valor: </label>\n                    <input ref={ this.valorGasto } className=\"u-full-width\" type=\"text\" placeholder=\"Ej. 5000\" />\n                </div>\n\n                <input className=\"button-primary u-full-width\" type=\"submit\" value=\"Agregar\" />\n            </form>\n        );\n    }\n}\n\nFormulario.propTypes = {\n    agregarGasto: PropTypes.func.isRequired\n}\n\nexport default Formulario;","import React, { Component } from \"react\";\n\nclass Gasto extends Component {\n    render(){\n        const { nombreGasto, valorGasto } = this.props.gasto;\n        \n        return(\n            <li className=\"gastos\"> \n                <p>\n                    { nombreGasto }\n                    <span className=\"gasto\">$ { valorGasto } </span>\n                </p>\n            </li>\n        );\n    }\n}\n\nexport default Gasto;","import React, { Component } from 'react';\nimport Gasto from './Gasto';\n\nclass Listado extends Component {\n    render(){\n       return(\n           <div className=\"gastos-realizados\">\n               <h2>Listado</h2>\n               \n               { Object.keys(this.props.gastos).map((key) => (\n                   <Gasto key= { key } gasto = { this.props.gastos[key] } />\n               )) } \n           </div>\n       ); \n    }\n}\n\nexport default Listado;\n","import React, { Component } from 'react';\n\nclass Presupuesto extends Component {\n    render(){\n        return(\n            <div className=\"alert alert-primary\">\n                Presupuesto $ { this.props.presupuesto }\n            </div>\n        );\n    }\n}\n\nexport default Presupuesto;","export const validarPresupuesto = presupuesto => {\n    let totalPresupuesto = parseInt(presupuesto, 10)|| 0;\n\n    if(totalPresupuesto > 0 ) {\n        return totalPresupuesto;\n    } else {\n        return false;\n    }\n}\n\nexport const revisarPresupuesto = (presupuesto,restante) => {\n    let clase;\n    // Comprobar el 25% \n    if( (presupuesto / 4) > restante) {\n         clase = 'alert alert-danger';\n    } else if( (presupuesto / 2) > restante) {\n        clase = 'alert alert-warning'\n    } else {\n        clase = 'alert alert alert-success';\n    }\n    return clase;\n} ","import React, { Component } from 'react';\nimport { revisarPresupuesto } from '../helper';\n\nclass Restante extends Component {\n    render(){\n        const restante = this.props.restante;\n        const presupuesto = this.props.presupuesto;\n        \n        return(\n            <div className={revisarPresupuesto(presupuesto, restante)}>\n                Restante $ { this.props.restante }\n            </div>\n        );\n    }\n}\n\nexport default Restante;","import React, { Component } from 'react';\nimport Presupuesto from './Presupuesto';\nimport Restante from './Restante';\n\nclass ControlPresupuesto extends Component {\n    render(){\n        return(\n            <>\n                <Presupuesto presupuesto = { this.props.presupuesto }/>\n                <Restante presupuesto = { this.props.presupuesto } restante = { this.props.restante } />\n            </>\n        );\n    }\n}\n\nexport default ControlPresupuesto;","import React from 'react';\nimport Header from './Header';\nimport Formulario from './Formulario';\nimport Listado from './Listado';\nimport ControlPresupuesto from './ControlPresupuesto';\nimport { validarPresupuesto } from '../helper';\n\n// Styles\nimport '../styles/App.css';\n\n\nclass App extends React.Component {\n    state = {\n        presupuesto : '',\n        restante : '',\n        gastos : {},\n    }\n\n    componentDidMount(){\n        this.obtenerPresupuesto();\n    }\n\n    obtenerPresupuesto(){\n        let presupuesto = prompt(\"¿ Cuál es tu presupuesto ?\")\n\n        let resultado = validarPresupuesto(presupuesto);\n\n        if (resultado){\n            this.setState({\n                presupuesto,\n                restante : presupuesto\n            });\n        }else{\n            this.obtenerPresupuesto();\n        }\n    }\n    \n    agregarGasto = (gasto) => {\n        const gastos = {...this.state.gastos}\n        gastos[`gasto${Date.now()}`] = gasto;\n\n        this.setState({ gastos });\n        this.calcularRestante(gasto.valorGasto)\n    }\n\n    calcularRestante(valorGasto){\n        let cantidad = Number(valorGasto);\n        let restante = this.state.restante;\n        \n        restante -= cantidad;\n\n        this.setState({\n            restante\n        });\n    }\n    \n    render(){\n        return(\n            <div className=\"App container\">\n                <Header titulo=\"Gasto Semanal\"/>\n    \n                <div className=\"contenido-principal contenido\">\n                    <div className=\"row\">\n                        <div className=\"one-half column\">\n                            <Formulario agregarGasto = { this.agregarGasto }/>\n                        </div>\n                        <div className=\"one-half column\">\n                            <Listado gastos = { this.state.gastos }/>\n                            <ControlPresupuesto presupuesto= { this.state.presupuesto } restante= { this.state.restante }/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}